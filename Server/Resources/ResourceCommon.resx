<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Agility" xml:space="preserve">
    <value>Agility</value>
  </data>
  <data name="AGuildLeaderNeedsToBeAtLeastLevel" xml:space="preserve">
    <value>A guild leader needs to be at least level {0}</value>
  </data>
  <data name="AGuildNeedsAtLeast1Leaders" xml:space="preserve">
    <value>A guild needs at least 2 leaders.</value>
  </data>
  <data name="AlreadyAtWarWithThisGuild" xml:space="preserve">
    <value>Already at war with this guild.</value>
  </data>
  <data name="AverageDamageInflictedOnTheTrainerDps" xml:space="preserve">
    <value>{0} Average Damage inflicted on the trainer, Dps: {1:#.00}.</value>
  </data>
  <data name="BidMet" xml:space="preserve">
    <value>Bid Met</value>
  </data>
  <data name="CannotGoToWarWithYourOwnGuild" xml:space="preserve">
    <value>Cannot go to war with your own guild.</value>
  </data>
  <data name="CouldNotFindGuild" xml:space="preserve">
    <value>Could not find guild {0}.</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="FailedMovementToMap" xml:space="preserve">
    <value>Failed movement to Map {0}</value>
  </data>
  <data name="FailedMovementToMapCord" xml:space="preserve">
    <value>Failed movement to Map {0} at {1}:{2}</value>
  </data>
  <data name="FailedMovementToMapInstance" xml:space="preserve">
    <value>Failed movement to Map {0}:[{1}]</value>
  </data>
  <data name="FailedMovementToMapInstanceCord" xml:space="preserve">
    <value>Failed movement to Map {0}:[{1}] at {2}:{3}</value>
  </data>
  <data name="ForSale" xml:space="preserve">
    <value>For Sale</value>
  </data>
  <data name="HasJustExpiredFromYourEquipment" xml:space="preserve">
    <value>has just expired from your equipment.</value>
  </data>
  <data name="HasJustExpiredFromYourInventory" xml:space="preserve">
    <value>has just expired from your inventory.</value>
  </data>
  <data name="HasJustExpiredFromYourStorage" xml:space="preserve">
    <value>has just expired from your storage.</value>
  </data>
  <data name="HasStartedAWar" xml:space="preserve">
    <value>{0} has started a war</value>
  </data>
  <data name="InflictedDamageDps" xml:space="preserve">
    <value>{3} inflicted {0} {1} Damage, Dps: {2:#.00}.</value>
  </data>
  <data name="InflictedDamageDpsPoison" xml:space="preserve">
    <value>{1} inflicted {0} Damage, Dps: {2:#.00}.</value>
  </data>
  <data name="Leader" xml:space="preserve">
    <value>Leader</value>
  </data>
  <data name="Magic" xml:space="preserve">
    <value>Magic</value>
  </data>
  <data name="MagicalAgility" xml:space="preserve">
    <value>Magical Agility</value>
  </data>
  <data name="MapCouldNotBeFound" xml:space="preserve">
    <value>Map {0}:[{1}] could not be found</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="MonsterHasBeenSpawned" xml:space="preserve">
    <value>Monster {0} x{1} has been spawned.</value>
  </data>
  <data name="MovedToMap" xml:space="preserve">
    <value>Moved to Map {0}</value>
  </data>
  <data name="MovedToMapCord" xml:space="preserve">
    <value>Moved to Map {0} at {1}:{2</value>
  </data>
  <data name="MovedToMapInstance" xml:space="preserve">
    <value>Moved to Map {0}:[{1}]</value>
  </data>
  <data name="MovedToMapInstanceCord" xml:space="preserve">
    <value>Moved to Map {0}:[{1}] at {2}:{3</value>
  </data>
  <data name="NoBid" xml:space="preserve">
    <value>No Bid</value>
  </data>
  <data name="NotEnoughGold" xml:space="preserve">
    <value>Not enough gold.</value>
  </data>
  <data name="PhysicalAgility" xml:space="preserve">
    <value>Physical Agility</value>
  </data>
  <data name="Physicial" xml:space="preserve">
    <value>Physicial</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="RankNameToShort" xml:space="preserve">
    <value>Rank name too short!</value>
  </data>
  <data name="RankNotFound" xml:space="preserve">
    <value>Rank not found!</value>
  </data>
  <data name="Sold" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="SomeoneHasBidGoldFor" xml:space="preserve">
    <value>Someone has bid {1:#,##0} Gold for {0}</value>
  </data>
  <data name="TheRentalLockHasBeenRemovedFrom" xml:space="preserve">
    <value>The rental lock has been removed from {0}</value>
  </data>
  <data name="WarEndedWith" xml:space="preserve">
    <value>War ended with {0}.</value>
  </data>
  <data name="You" xml:space="preserve">
    <value>You</value>
  </data>
  <data name="YouAreNotAllowedToChangeRanks" xml:space="preserve">
    <value>You are not allowed to change ranks!</value>
  </data>
  <data name="YouBidGoldFor" xml:space="preserve">
    <value>You bid {1:#,##0} Gold for {0}</value>
  </data>
  <data name="YouCanAlreadyUnequipACursedItem" xml:space="preserve">
    <value>You can already unequip a cursed item</value>
  </data>
  <data name="YouCannotChangeTheOptionsOfYourOwnRank" xml:space="preserve">
    <value>You cannot change the options of your own rank!</value>
  </data>
  <data name="YouCannotHaveAnymoreRanks" xml:space="preserve">
    <value>You cannot have anymore ranks.</value>
  </data>
  <data name="YouCannotLeaveTheGuildWhenYouAreLeader" xml:space="preserve">
    <value>You cannot leave the guild when you're leader.</value>
  </data>
  <data name="YouCannotPositionMoveOnThisMap" xml:space="preserve">
    <value>You cannot position move on this map</value>
  </data>
  <data name="YouCannotTeleportForAnotherSeconds" xml:space="preserve">
    <value>You cannot teleport for another {0} seconds</value>
  </data>
  <data name="YouCanNowUnequipACursedItem" xml:space="preserve">
    <value>You can now unequip a cursed item.</value>
  </data>
  <data name="YouHaveBeenRemovedFromYourGuild" xml:space="preserve">
    <value>You have been removed from your guild.</value>
  </data>
  <data name="YouHaveLeftYourGuild" xml:space="preserve">
    <value>You have left your guild.</value>
  </data>
  <data name="YouMustBeALeaderToStartAWar" xml:space="preserve">
    <value>You must be a leader to start a war.</value>
  </data>
  <data name="YouNeedAtLeast1LeaderOnline" xml:space="preserve">
    <value>You need at least 1 leader online.</value>
  </data>
  <data name="YourPet" xml:space="preserve">
    <value>Your pet</value>
  </data>
  <data name="YourPetsPoison" xml:space="preserve">
    <value>Your pets poison</value>
  </data>
  <data name="YourPoison" xml:space="preserve">
    <value>Your poison</value>
  </data>
  <data name="YourPoisonStoppedRegenDps" xml:space="preserve">
    <value>Your poison stopped {0} regen, Dps: {1:#.00}.</value>
  </data>
  <data name="YourRankIsNotAdequate" xml:space="preserve">
    <value>Your rank is not adequate.</value>
  </data>
  <data name="YouStartedAWarWith" xml:space="preserve">
    <value>You started a war with {0}.</value>
  </data>
</root>
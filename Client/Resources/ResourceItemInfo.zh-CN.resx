<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adds" xml:space="preserve">
    <value>镶嵌</value>
  </data>
  <data name="Amulet" xml:space="preserve">
    <value>护身符</value>
  </data>
  <data name="Armour" xml:space="preserve">
    <value>盔甲</value>
  </data>
  <data name="BagWeight" xml:space="preserve">
    <value>背包重量</value>
  </data>
  <data name="Belt" xml:space="preserve">
    <value>腰带</value>
  </data>
  <data name="Boots" xml:space="preserve">
    <value>靴子</value>
  </data>
  <data name="Bracelet" xml:space="preserve">
    <value>手镯</value>
  </data>
  <data name="BreaksOnDeath" xml:space="preserve">
    <value>死亡时破碎</value>
  </data>
  <data name="CanBeUsedOn" xml:space="preserve">
    <value>可用于:</value>
  </data>
  <data name="Candle" xml:space="preserve">
    <value>蜡烛</value>
  </data>
  <data name="CannotBeAWeddingring" xml:space="preserve">
    <value>不能作为结婚戒指</value>
  </data>
  <data name="CannotBeUsedOnAnyItem" xml:space="preserve">
    <value>不能用于任何物品</value>
  </data>
  <data name="CantAwaken" xml:space="preserve">
    <value>不能觉醒</value>
  </data>
  <data name="CantDrop" xml:space="preserve">
    <value>不会掉落</value>
  </data>
  <data name="CantDropOnDeath" xml:space="preserve">
    <value>死亡时不会掉落</value>
  </data>
  <data name="CantRepair" xml:space="preserve">
    <value>不能修理</value>
  </data>
  <data name="CantSpecialRepair" xml:space="preserve">
    <value>不能特殊修理</value>
  </data>
  <data name="CantStore" xml:space="preserve">
    <value>不能存储</value>
  </data>
  <data name="CantTrade" xml:space="preserve">
    <value>不能交易</value>
  </data>
  <data name="CantUpgrade" xml:space="preserve">
    <value>不能升级</value>
  </data>
  <data name="CriticalDamage" xml:space="preserve">
    <value>暴击伤害</value>
  </data>
  <data name="DestroyedWhenDropped" xml:space="preserve">
    <value>丢弃时销毁</value>
  </data>
  <data name="Drop" xml:space="preserve">
    <value>掉落</value>
  </data>
  <data name="Durability" xml:space="preserve">
    <value>耐久</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>持续时间</value>
  </data>
  <data name="Exp" xml:space="preserve">
    <value>经验</value>
  </data>
  <data name="ExpiresIn" xml:space="preserve">
    <value>过期日期</value>
  </data>
  <data name="HealthRecovery" xml:space="preserve">
    <value>生命值恢复</value>
  </data>
  <data name="Helmet" xml:space="preserve">
    <value>头盔</value>
  </data>
  <data name="HoldCTRLAndLeftClickToCombineWithAnItem" xml:space="preserve">
    <value>按住 CTRL + 左键 可组合物品。</value>
  </data>
  <data name="HoldCTRLAndLeftClickToRepairArmourAndAccessoryItems" xml:space="preserve">
    <value>按住 CTRL + 左键 可修复盔甲和首饰。</value>
  </data>
  <data name="HoldCTRLAndLeftClickToRepairWeapons" xml:space="preserve">
    <value>按住 CTRL + 左键 可修复武器。</value>
  </data>
  <data name="ItemRentedFrom" xml:space="preserve">
    <value>物品租借自</value>
  </data>
  <data name="Loyalty" xml:space="preserve">
    <value>忠诚度</value>
  </data>
  <data name="MaxHP" xml:space="preserve">
    <value>最大生命值</value>
  </data>
  <data name="MaxMP" xml:space="preserve">
    <value>最大魔法值</value>
  </data>
  <data name="Necklace" xml:space="preserve">
    <value>项链</value>
  </data>
  <data name="Nutrition" xml:space="preserve">
    <value>营养</value>
  </data>
  <data name="Purity" xml:space="preserve">
    <value>纯度</value>
  </data>
  <data name="Quality" xml:space="preserve">
    <value>品质</value>
  </data>
  <data name="ReflectChance" xml:space="preserve">
    <value>反射几率: {0}</value>
  </data>
  <data name="RentalExpiresIn" xml:space="preserve">
    <value>租借过期</value>
  </data>
  <data name="RentalLockExpiresIn" xml:space="preserve">
    <value>租借锁定过期</value>
  </data>
  <data name="Ring" xml:space="preserve">
    <value>戒子</value>
  </data>
  <data name="SoulbindsOnEquip" xml:space="preserve">
    <value>装备时灵魂绑定</value>
  </data>
  <data name="SoulboundTo" xml:space="preserve">
    <value>灵魂绑定: </value>
  </data>
  <data name="Stone" xml:space="preserve">
    <value>石头</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>使用</value>
  </data>
  <data name="Weapon" xml:space="preserve">
    <value>武器</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>重量</value>
  </data>
</root>
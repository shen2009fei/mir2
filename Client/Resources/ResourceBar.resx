<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="-Invisible" xml:space="preserve">
    <value>-Invisible</value>
  </data>
  <data name="-Observer" xml:space="preserve">
    <value>-Observer</value>
  </data>
  <data name="-Superman" xml:space="preserve">
    <value>-Superman</value>
  </data>
  <data name="ActiveBuffs" xml:space="preserve">
    <value>Active Buffs</value>
  </data>
  <data name="ActivePoisons" xml:space="preserve">
    <value>Active Poisons</value>
  </data>
  <data name="AgressiveFullDamageCantShootOverWalls" xml:space="preserve">
    <value>Agressive (Full damage){0}Can't shoot over walls.{0}</value>
  </data>
  <data name="Caster" xml:space="preserve">
    <value>Caster</value>
  </data>
  <data name="CausesTemporaryBlindness" xml:space="preserve">
    <value>Causes temporary blindness.</value>
  </data>
  <data name="ChanceToGainHPWhenAttacked" xml:space="preserve">
    <value>{0}% chance to gain {1} HP when attacked.{2}</value>
  </data>
  <data name="Decreased" xml:space="preserve">
    <value>Decreased</value>
  </data>
  <data name="DisguisesYourAppearance" xml:space="preserve">
    <value>Disguises your appearance.{0}</value>
  </data>
  <data name="GivesYouAPoisonAbilityThatCanBeReleasedWithCertainSkills" xml:space="preserve">
    <value>Gives you a poison ability{0}that can be released with{0}certain skills.{0}</value>
  </data>
  <data name="GivesYouAVampiricAbilityThatCanBeReleasedWithCertainSkills" xml:space="preserve">
    <value>Gives you a vampiric ability{0}that can be released with{0}certain skills.{0}</value>
  </data>
  <data name="GroupModeMediumDamageDontStealAgro" xml:space="preserve">
    <value>Group Mode (Medium damage){0}Don't steal agro.{0}</value>
  </data>
  <data name="Increased" xml:space="preserve">
    <value>Increased</value>
  </data>
  <data name="IncreasesChanceOnElementExtraction" xml:space="preserve">
    <value>Increases chance on element extraction.{0}</value>
  </data>
  <data name="IncreasesDamageReceivedByTwentyPercentEvery" xml:space="preserve">
    <value>Increases damage received by 20% every {0} {1}.{2}</value>
  </data>
  <data name="IncreasesMCByIncreasesConsumptionBy" xml:space="preserve">
    <value>Increases MC by: {0}-{1}.{3}Increases consumption by {2}%.{3}</value>
  </data>
  <data name="InvisibleToManyMonsters" xml:space="preserve">
    <value>Invisible to many monsters.</value>
  </data>
  <data name="InvisibleToManyMonstersAndAbleToMove" xml:space="preserve">
    <value>Invisible to many monsters and able to move.{0}</value>
  </data>
  <data name="InvisibleToPlayersAndManyMonstersWhenAtAdistance" xml:space="preserve">
    <value>Invisible to players and many{0}monsters when at a distance.{0}</value>
  </data>
  <data name="LearnSkillPointsTwiceAsAuick" xml:space="preserve">
    <value>Learn skill points twice as quick.{0}</value>
  </data>
  <data name="PreventsAttacking" xml:space="preserve">
    <value>Prevents attacking.</value>
  </data>
  <data name="PreventsCastingMovingAndAttacking" xml:space="preserve">
    <value>Prevents casting, moving and attacking.</value>
  </data>
  <data name="PreventsMovingAndAttacking" xml:space="preserve">
    <value>Prevents moving and attacking.</value>
  </data>
  <data name="PreventsMovingAndAttackingCancelsWhenAttacked" xml:space="preserve">
    <value>Prevents moving and attacking.{0}Cancels when attacked{0}</value>
  </data>
  <data name="RecieveDamageEvery" xml:space="preserve">
    <value>Recieve {0} damage every {1} {2}.{3}</value>
  </data>
  <data name="ReducesArmourRateByTenPercentEvery" xml:space="preserve">
    <value>Reduces armour rate by 10% every {0} {1}.{2}</value>
  </data>
  <data name="ReducesMovementSpeed" xml:space="preserve">
    <value>Reduces movement speed.</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>second</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="SkillBarInfo" xml:space="preserve">
    <value>{0}{4}MP: {1}{4}Cooldown: {2}{4}Key: {3}</value>
  </data>
  <data name="TickingTimeBomb" xml:space="preserve">
    <value>Ticking time bomb.</value>
  </data>
  <data name="TrickShotMinimalDamageCanShootOverWalls" xml:space="preserve">
    <value>Trick shot (Minimal damage){0}Can shoot over walls.{0}</value>
  </data>
</root>
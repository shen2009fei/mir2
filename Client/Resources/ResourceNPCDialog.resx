<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessoryItems" xml:space="preserve">
    <value>Accessory Items</value>
  </data>
  <data name="AreYouSureYouWantToBidGoldFor" xml:space="preserve">
    <value>Are you sure you want to bid {0:#,##0} Gold for {1}?</value>
  </data>
  <data name="AreYouSureYouWantToBuyFor" xml:space="preserve">
    <value>Are you sure you want to buy {0} for {1:#,##0} {2}?</value>
  </data>
  <data name="AuctionHasAlreadyEndedForThisItem" xml:space="preserve">
    <value>Auction has already ended for this item.</value>
  </data>
  <data name="auctionText" xml:space="preserve">
    <value>1. Auction cost is {0} gold, max starting bid is {1} gold per item \r\n\r\n2. 1% of final bid price is paid to Trust Merchant at auction end\r\n\r\n3. Maximum {2} days of item sale registration, afterwards the item will be sent to highest bidder\r\n\r\n4. Maximum of unlimited "items allowed for auction\r\n\r\n</value>
  </data>
  <data name="Bid" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="BidAmount" xml:space="preserve">
    <value>Bid Amount:</value>
  </data>
  <data name="BidMet" xml:space="preserve">
    <value>Bid Met</value>
  </data>
  <data name="BodyGlyph" xml:space="preserve">
    <value>Body Glyph</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="BraveryGlyph" xml:space="preserve">
    <value>Bravery Glyp</value>
  </data>
  <data name="BuffPots" xml:space="preserve">
    <value>Buff Pots</value>
  </data>
  <data name="CannotCarryAnymoreGold" xml:space="preserve">
    <value>Cannot carry anymore gold.</value>
  </data>
  <data name="CannotConsignThisItem" xml:space="preserve">
    <value>Cannot consign this item.</value>
  </data>
  <data name="CannotRepairThisItem" xml:space="preserve">
    <value>Cannot repair this item.</value>
  </data>
  <data name="CannotSellThisItem" xml:space="preserve">
    <value>Cannot sell this item.</value>
  </data>
  <data name="ChanceofSuccess" xml:space="preserve">
    <value>Chance of Success</value>
  </data>
  <data name="CheckRefine" xml:space="preserve">
    <value>Check Refine</value>
  </data>
  <data name="Consignment" xml:space="preserve">
    <value>Consignment</value>
  </data>
  <data name="ConsignmentPrice" xml:space="preserve">
    <value>Consignment Price:</value>
  </data>
  <data name="consignmentText" xml:space="preserve">
    <value>1. Consignment is {0} gold per item \r\n\r\n2. 1% of sale price is paid to Trust Merchant at sale end\r\n\r\n3. Maximum {1} days of item sale registration until item is removed\r\n\r\n4. Maximum of unlimited items allowed for sale\r\n\r\n5. Sale price can be set between: {2} - {3} gold</value>
  </data>
  <data name="ConsumableItems" xml:space="preserve">
    <value>Consumable Items</value>
  </data>
  <data name="CraftAmount" xml:space="preserve">
    <value>Craft Amount:</value>
  </data>
  <data name="CraftItems" xml:space="preserve">
    <value>Craft Items</value>
  </data>
  <data name="Downgrade" xml:space="preserve">
    <value>Downgrade</value>
  </data>
  <data name="DraperyItems" xml:space="preserve">
    <value>Drapery Items</value>
  </data>
  <data name="ENDDATE" xml:space="preserve">
    <value>END DATE</value>
  </data>
  <data name="Enhancement" xml:space="preserve">
    <value>Enhancement</value>
  </data>
  <data name="EvilSlayerGlyph" xml:space="preserve">
    <value>EvilSlayer Glyph</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="EXPIRY" xml:space="preserve">
    <value>EXPIRY</value>
  </data>
  <data name="ForSale" xml:space="preserve">
    <value>For Sale</value>
  </data>
  <data name="Gold" xml:space="preserve">
    <value>Gold</value>
  </data>
  <data name="HasNotSoldAreYouSureYouWantToGetItBack" xml:space="preserve">
    <value>{0} has not sold, Are you sure you want to get it back?</value>
  </data>
  <data name="HIGHESTBID" xml:space="preserve">
    <value>HIGHEST BID</value>
  </data>
  <data name="IAmInterestedInPurchasingFor" xml:space="preserve">
    <value>I am interested in purchasing {0} for {1}.</value>
  </data>
  <data name="IsntARing" xml:space="preserve">
    <value>{0} isn't a ring.</value>
  </data>
  <data name="ITEM" xml:space="preserve">
    <value>ITEM</value>
  </data>
  <data name="ItemWillBeDestroyed" xml:space="preserve">
    <value>Item will be Destroyed</value>
  </data>
  <data name="MagicGlyph" xml:space="preserve">
    <value>Magic Glyph</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>Misc Items</value>
  </data>
  <data name="NoBid" xml:space="preserve">
    <value>No Bid</value>
  </data>
  <data name="NotEnoughGold" xml:space="preserve">
    <value>Not enough gold.</value>
  </data>
  <data name="Orbs" xml:space="preserve">
    <value>Orbs</value>
  </data>
  <data name="PRICE" xml:space="preserve">
    <value>PRICE</value>
  </data>
  <data name="PRICEBID" xml:space="preserve">
    <value>PRICE / BID</value>
  </data>
  <data name="PriceGold" xml:space="preserve">
    <value>Price: {0} gold</value>
  </data>
  <data name="PricePearl" xml:space="preserve">
    <value>Price: {0} pearls</value>
  </data>
  <data name="ProtectionGlyph" xml:space="preserve">
    <value>Protection Glyph</value>
  </data>
  <data name="PurchaseAmount" xml:space="preserve">
    <value>Purchase Amount:</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="RecoveryPots" xml:space="preserve">
    <value>Recovery Pots</value>
  </data>
  <data name="Refine" xml:space="preserve">
    <value>Refine</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>Repair</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="SALEPRICE" xml:space="preserve">
    <value>SALE PRICE</value>
  </data>
  <data name="ScrollsOils" xml:space="preserve">
    <value>Scrolls / Oils</value>
  </data>
  <data name="SelectUpgradeItem" xml:space="preserve">
    <value>Select Upgrade Item.</value>
  </data>
  <data name="SelectUpgradeType" xml:space="preserve">
    <value>Select Upgrade Type.</value>
  </data>
  <data name="SELLEREXPIRY" xml:space="preserve">
    <value>SELLER / EXPIRY</value>
  </data>
  <data name="SELLITEM" xml:space="preserve">
    <value>SELL ITEM</value>
  </data>
  <data name="ShowAllItems" xml:space="preserve">
    <value>Show All Items</value>
  </data>
  <data name="Sold" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="SoulGlyph" xml:space="preserve">
    <value>Soul Glyph</value>
  </data>
  <data name="SpecialRepair" xml:space="preserve">
    <value>S. Repair</value>
  </data>
  <data name="STARTINGBID" xml:space="preserve">
    <value>STARTING BID</value>
  </data>
  <data name="ThisItemHasAlreadyBeenSold" xml:space="preserve">
    <value>This item has already been sold.</value>
  </data>
  <data name="ThisItemHasExpiredAndCannotBeBrought" xml:space="preserve">
    <value>This item has Expired and cannot be bought.</value>
  </data>
  <data name="ThisItemHasNotMetTheMinimumBidYet" xml:space="preserve">
    <value>This item has not met the minimum bid yet.</value>
  </data>
  <data name="WeaponItems" xml:space="preserve">
    <value>Weapon Items</value>
  </data>
  <data name="YouAreTooFarAwayFromTheTrustMerchant" xml:space="preserve">
    <value>You are too far away from the Trust Merchant.</value>
  </data>
  <data name="YouCannotBuyFromTheTrustMerchantWithoutUsing" xml:space="preserve">
    <value>You cannot buy from the TrustMerchant without using.</value>
  </data>
  <data name="YouCannotBuyYourOwnItems" xml:space="preserve">
    <value>You cannot buy your own items.</value>
  </data>
  <data name="YouCannotHoldEnoughGoldToGetYourSale" xml:space="preserve">
    <value>You cannot hold enough gold to get your sale.</value>
  </data>
  <data name="YouCannotPpurchaseAnymoreItems" xml:space="preserve">
    <value>You cannot purchase any more items.</value>
  </data>
  <data name="YouCannotUseTheTrustMerchantWhenDead" xml:space="preserve">
    <value>You cannot use the TrustMerchant when dead.</value>
  </data>
  <data name="YouCanSearchAgainAfterSeconds" xml:space="preserve">
    <value>You can search again after {0} seconds.</value>
  </data>
  <data name="YouDoDotHaveTheRequiredToolsOrIngredients" xml:space="preserve">
    <value>You do not have the required tools or ingredients.</value>
  </data>
  <data name="YouDoNotHaveEnoughGold" xml:space="preserve">
    <value>You do not have enough gold.</value>
  </data>
  <data name="YouDoNotHaveEnoughPearls" xml:space="preserve">
    <value>You do not have enough Pearls.</value>
  </data>
  <data name="YouDoNotHaveEnoughWeight" xml:space="preserve">
    <value>You do not have enough weight.</value>
  </data>
  <data name="YouDoNotHaveEnoughWeightOrSpaceSpareToBuyThisItem" xml:space="preserve">
    <value>You do not have enough weight or space spare to buy this item.</value>
  </data>
  <data name="YouDontHaveEnoughGoldToRefineYour" xml:space="preserve">
    <value>You don't have enough gold to refine your {0}.</value>
  </data>
  <data name="YouHaventDepositedAnyItemsToRefineYourWith" xml:space="preserve">
    <value>You haven't deposited any items to refine your {0} with.</value>
  </data>
  <data name="YourHasntBeenRefinedSoItDoesntNeedChecking" xml:space="preserve">
    <value>Your {0} hasn't been refined so it doesn't need checking.</value>
  </data>
</root>